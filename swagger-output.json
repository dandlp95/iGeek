{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Accounts",
      "description": "All references needed to get, add, delete and edit accounts."
    },
    {
      "name": "Products",
      "description": "All references needed to get, add, delete and edit products."
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "paths": {
    "(/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns all Products",
        "description": "Returns all products added to database.",
        "operationId": "getAllProducts.",
        "produces": [
          null
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all products.",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "(/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns 1 product by Id.",
        "description": "Returns the product with the Id that matches the request   Id.",
        "operationId": "getProduct",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns product with specified request id",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "(/products/add_product": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Adds 1 product.",
        "description": "Adds the product in the request.",
        "operationId": "addProduct",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns posted product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "(/products/edit_product/{id}": {
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Edits 1 product.",
        "description": "Edits the product with the specified id.",
        "operationId": "editProduct",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns edited product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "(/products/delete_product/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Deletes 1 product.",
        "description": "Deletes the product with the specified id.",
        "operationId": "deleteProduct",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "(/accounts/": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Returns all accounts",
        "description": "Returns all accounts added to database.",
        "operationId": "getAllAccounts.",
        "produces": [
          null
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all accounts.",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "(/accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Returns 1 account by Id.",
        "description": "Returns the account with the Id that matches the request   Id.",
        "operationId": "getAccount",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns account with specified request id",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "(/accounts/add_account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Adds 1 account.",
        "description": "Adds the account in the request.",
        "operationId": "addAccount",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns posted account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "(/accounts/edit_account/{id}": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Edits account.",
        "description": "Replaces account information with information from the request.",
        "operationId": "editAccount",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns edit account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "(/accounts/delete_account/{id}": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Deletes account.",
        "description": "Deletes account with specified Id.",
        "operationId": "deleteAccount",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "(/accounts/purchase": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Purchases 1 product",
        "description": "",
        "operationId": "purchase",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ReceiptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Success",
            "schema": {
              "$ref": "#/definitions/ReceiptResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "(/accounts/login": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Logs in user",
        "description": "",
        "operationId": "login",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginCreds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Token and userId",
            "schema": {
              "$ref": "#/definitions/LoginConfirm"
            }
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns all Products",
        "description": "Returns all products added to database.",
        "operationId": "getAllProducts.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all products.",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns 1 product by Id.",
        "description": "Returns the product with the Id that matches the request   Id.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns product with specified request id",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/products/add_product": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Adds 1 product.",
        "description": "Adds the product in the request.",
        "operationId": "addProduct",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns posted product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/edit_product/{id}": {
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Edits 1 product.",
        "description": "Edits the product with the specified id.",
        "operationId": "editProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns edited product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/products/delete_product/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Deletes 1 product.",
        "description": "Deletes the product with the specified id.",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/accounts/": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Returns all accounts",
        "description": "Returns all accounts added to database.",
        "operationId": "getAllAccounts.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all accounts.",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Returns 1 account by Id.",
        "description": "Returns the account with the Id that matches the request   Id.",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns account with specified request id",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/accounts/add_account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Adds 1 account.",
        "description": "Adds the account in the request.",
        "operationId": "addAccount",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns posted account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts/edit_account/{id}": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Edits account.",
        "description": "Replaces account information with information from the request.",
        "operationId": "editAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns edit account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/accounts/delete_account/{id}": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Deletes account.",
        "description": "Deletes account with specified Id.",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts/purchase": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Purchases 1 product",
        "description": "",
        "operationId": "purchase",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ReceiptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Success",
            "schema": {
              "$ref": "#/definitions/ReceiptResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts/login": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Logs in user",
        "description": "",
        "operationId": "login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginCreds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sends Token and userId",
            "schema": {
              "$ref": "#/definitions/LoginConfirm"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "example": "TestUserName"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "firstName": {
          "type": "string",
          "example": "Joe"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "address": {
          "type": "string",
          "example": "12 Test Street, ID, USA"
        },
        "email": {
          "type": "string",
          "example": "Joe_Doe@gmail.com"
        },
        "interests": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "Accounts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Account"
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "example": "Test Product"
        },
        "productDescription": {
          "type": "string",
          "example": "This is a test description for test product"
        },
        "stock": {
          "type": "number",
          "example": 5
        },
        "cost": {
          "type": "number",
          "example": 100
        }
      }
    },
    "Products": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Product"
      }
    },
    "ReceiptResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "example": "62a54ac57d0c23aca502a25c"
        },
        "purchase": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "string",
                "example": "62895a86d7c8591701dd2be4"
              },
              "productName": {
                "type": "string",
                "example": "Justice League #45"
              },
              "cost": {
                "type": "number",
                "example": 4
              },
              "quantity": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "ReceiptRequest": {
      "type": "object",
      "properties": {
        "purchase": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "string",
                "example": "62895a86d7c8591701dd2be4"
              },
              "productName": {
                "type": "string",
                "example": "Justice League #45"
              },
              "cost": {
                "type": "number",
                "example": 4
              },
              "quantity": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "LoginCreds": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "example": "userName"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "LoginConfirm": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "String"
        },
        "password": {
          "type": "string",
          "example": "String"
        }
      }
    }
  }
}